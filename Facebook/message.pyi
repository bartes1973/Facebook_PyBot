from typing import Dict, Any, List, Union, Optional


def updates(callback: Dict[str, Any]) -> List[Dict[str, Any]]:
    ...


class Message:
    def __init__(self, data: Dict[str, Any]) -> None:
        self.user_id: Union[int, str] = ...
        self.page_id: Union[int, str] = ...
        self.message_received: Received = ...
        self.message_delivered: Delivered = ...
        self.message_read: Read = ...


class Received:
    def __init__(self, messaging: Dict[str, Any]) -> None:
        self.text: str = ...
        self.quick_reply: Optional[Dict] = ...
        self.quick_reply_payload: Optional[str] = ...
        self.postback_payload: Any = ...

        self.attachments: Attachments = ...


class Delivered:
    def __init__(self, messaging: Dict[str, Any]) -> None:
        ...


class Read:
    def __init__(self, messaging: Dict[str, Any]) -> None:
        ...


class Attachments:
    def __init__(self, attachment: Dict[str, Any]) -> None:
        self.url: Optional[str] = ...
        self.type: str = ...
        self.coordinates_lat: int = ...
        self.coordinates_long: int = ...
